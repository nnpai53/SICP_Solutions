(#%require racket/base)
(#%require racket/list)

(define (make-account balance account-password)
    (define incorrect-count 0)
    (define (withdraw amount)
        (if (>= balance amount)
            (begin (set! balance (- balance amount))
                   balance)
            "Insufficient Funds"))
    (define (deposit amount)
        (begin (set! balance (+ balance amount))
               balance))
    (define call-the-police
        (error "Someone is trying to access an unauthorised account: Please Call the Cops" ))
    (define (dispatch entered-password m)
        (if (eq? entered-password account-password)
            (begin (set! incorrect-count 0)
                    (cond ((eq? m 'withdraw ) withdraw)
                          ((eq? m 'deposit) deposit)
                          (else (error "Unknown request: MAKE-ACCOUNT"
                                       m))))
            (begin (set incorrect-count (+1 incorrect-count))
                   (if (> 7 incorrect-count)
                       (call-the-police)
                       (error "Incorrect-password: Request not processed" )))))
    dispatch)

;; used for testing purposed
(define acc (make-account 100 'secret-password))
((acc 'some-other-password 'deposit) 50)
((acc 'changed-password 'withdraw) 50)
((acc 'name-of-user 'deposit) 50)
((acc 'different-password 'deposit) 50)
((acc 'withdraw-password 'deposit) 50)
((acc 'something-else 'deposit) 50)
((acc 'open-seasame 'deposit) 50)
((acc 'get-lost 'deposit) 50)
