(define (same-parity x . z)
  (define (has-same-parity number)
    (= (remainder number 2) (remainder x 2)))
  (define (iter-same-parity result)
    (cond ((null? z) '())
          ((has-same-parity (car z)) (append result (list (car z))))
          (else (iter-same-parity (cdr z)))))
  iter-same-parity (list x))