(define (accumulate op init sequence)
  (if (null? sequence)
      init
      (op (car sequence)
          (accumulate op init (cdr sequence)))))

(define (filter predicate? sequence)
  (cond ((null? sequence) '())
        ((predicate? (car sequence)) (cons (car sequence)
                                     (filter predicate? (cdr sequence))))
        (else (filter predicate? (cdr sequence)))))